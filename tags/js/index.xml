<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Js on Tech grumbling</title><link>https://cardinalby.github.io/blog/tags/js/</link><description>Recent content in Js on Tech grumbling</description><generator>Hugo</generator><language>en-us</language><copyright>cardinalby</copyright><lastBuildDate>Thu, 28 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cardinalby.github.io/blog/tags/js/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Maps Extended Routes browser extension</title><link>https://cardinalby.github.io/blog/project/google-maps-extended-routes/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/project/google-maps-extended-routes/</guid><description>&lt;p>The great web extension for motorbikers, cyclists and everyone who use Google Maps for planning long routes.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gz_Ie-80ab8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
 &lt;/div>

&lt;h3 id="see-the-homepage">&lt;a href="https://gmaps-extended-routes.pages.dev/" target="_blank">See the homepage&lt;/a>&lt;/h3>
&lt;h3 id="read-medium-story">&lt;a href="https://medium.com/@cardinalby/effective-routes-planning-in-google-maps-for-cyclists-and-motorbikers-01edd58283d8" target="_blank">Read Medium story&lt;/a>&lt;/h3>
&lt;p>🚴 Extend routes beyond 10 points&lt;/p>
&lt;p>📏 Optimize multi-stop routes for shorter travel to save time and fuel&lt;/p>
&lt;p>📱 Prepare a route for mobile navigation solving &amp;ldquo;disappearing waypoints&amp;rdquo; problem&lt;/p></description></item><item><title>JavaScript GitHub Action packing and releasing</title><link>https://cardinalby.github.io/blog/post/github-actions/js-action-packing-and-releasing/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/js-action-packing-and-releasing/</guid><description>&lt;h2 id="-overview">🔭 Overview&lt;/h2>
&lt;p>In this article I want to share some undocumented details of creating &lt;strong>JavaScript GitHub Actions&lt;/strong> related to the using of &lt;strong>ncc&lt;/strong> packing tool.&lt;/p>
&lt;p>It&amp;rsquo;s not just a step-by-step instruction, but the story describing the problem, the proposed approach and the reasoning behind it.&lt;/p>
&lt;p>If you are just looking for a quick code example, jump to &lt;a href="https://github.com/cardinalby/git-get-release-action/blob/master/.github/workflows/build-pack.yml" target="_blank">this one&lt;/a> and come back for an explanation 🙂&lt;/p>
&lt;h2 id="-basics-that-you-already-know">🎬 Basics that you already know&lt;/h2>
&lt;p>The basic approach is pretty easy and described in GitHub documentation &lt;a href="https://docs.github.com/en/actions/creating-actions/creating-a-javascript-action" target="_blank">here&lt;/a>. Also, there are simple &lt;a href="https://github.com/actions/javascript-action" target="_blank">JavaScript&lt;/a> and &lt;a href="https://github.com/actions/typescript-action" target="_blank">TypeScript&lt;/a> action examples provided by GitHub. I will not focus on it here.&lt;/p></description></item><item><title>GitHub Actions integration testing lib</title><link>https://cardinalby.github.io/blog/project/github-actions-testing-lib/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/project/github-actions-testing-lib/</guid><description>&lt;h2 id="check-out">Check out&lt;/h2>
&lt;p>&lt;a href="https://github.com/cardinalby/github-action-ts-run-api" target="_blank">https://github.com/cardinalby/github-action-ts-run-api&lt;/a>&lt;/p>
&lt;h2 id="purpose">Purpose&lt;/h2>
&lt;p>🔶 Executing your GitHub action &lt;strong>locally&lt;/strong> (or at any other environment).&lt;/p>
&lt;p>🔶 Writing integration and functional tests, run them locally and at CI.&lt;/p>
&lt;p>🔶 Having a short feedback loop without pushing and checking it behaviour at
real GitHub runners every time.&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;p>✅ Supports executing JavaScript and Docker actions.&lt;/p>
&lt;p>✅ Tested under Windows, Linux and macOS locally and on GitHub hosted runners.&lt;/p>
&lt;p>✅ Works well with Docker Desktop under Windows and macOS (for Docker actions).&lt;/p></description></item><item><title>Testing of JavaScript Actions</title><link>https://cardinalby.github.io/blog/post/github-actions/testing/2-testing-of-js-actions/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/testing/2-testing-of-js-actions/</guid><description>&lt;p>Let&amp;rsquo;s talk about JavaScript GitHub Actions and approaches that we can apply on the different levels of testing.&lt;/p>
&lt;h1 id="unit-tests">Unit tests&lt;/h1>
&lt;p>From my point of view, unit testing of Actions doesn&amp;rsquo;t have any differences from testing any other JavaScript code. In most of the examples of Actions available on the GitHub Marketplace authors don&amp;rsquo;t care about &lt;a href="https://github.com/mawrkus/js-unit-testing-guide" target="_blank">writing testable code&lt;/a>. But nothing prevents you from extracting abstractions and following &lt;a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle" target="_blank">The Dependency Inversion Principle&lt;/a> which will allow you to easily mock dependencies (such as &lt;code>@actions/core&lt;/code> , &lt;code>@actions/github&lt;/code>, &lt;code>@actions/exec&lt;/code> packages).&lt;/p></description></item><item><title>Memrise Audio Uploader</title><link>https://cardinalby.github.io/blog/project/memrise-audio-uploader/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/project/memrise-audio-uploader/</guid><description>&lt;p>Memrise Audio Uploader is a Chrome extension which allows you to upload sounds of words and phrases pronunciation from &lt;a href="http://soundoftext.com" target="_blank">soundoftext.com&lt;/a> to &lt;a href="http://memrise.com" target="_blank">memrise.com&lt;/a> course.&lt;/p>
&lt;h2 id="check-out-the-source-code">Check out the source code&lt;/h2>
&lt;p>&lt;a href="https://github.com/cardinalby/memrise-audio-uploader" target="_blank">https://github.com/cardinalby/memrise-audio-uploader&lt;/a>&lt;/p>
&lt;h2 id="install-from-the-stores">Install from the stores&lt;/h2>
&lt;p>&lt;a href="https://chrome.google.com/webstore/detail/memrise-audio-uploader/fonhjbpoimjmgfgbboichngpjlmilbmk" target="_blank">Chrome Web Store&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://addons.mozilla.org/firefox/addon/memrise-audio-uploader/" target="_blank">Firefox Add-ons&lt;/a>&lt;/p>
&lt;p>To download the offline versions please go to the
&lt;a href="https://github.com/cardinalby/memrise-audio-uploader/releases" target="_blank">Releases page&lt;/a>.&lt;/p>
&lt;h2 id="screenshots">Screenshots&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/cardinalby/memrise-audio-uploader/master/design/screenshots/screenshot1.png" alt="Screenshot 1" />
&lt;img src="https://raw.githubusercontent.com/cardinalby/memrise-audio-uploader/master/design/screenshots/screenshot2.png" alt="Screenshot 2" />
&lt;img src="https://raw.githubusercontent.com/cardinalby/memrise-audio-uploader/master/design/screenshots/screenshot3.png" alt="Screenshot 3" />&lt;/p></description></item></channel></rss>