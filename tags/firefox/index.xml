<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Firefox on Tech grumbling</title><link>https://cardinalby.github.io/blog/tags/firefox/</link><description>Recent content in Firefox on Tech grumbling</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>cardinalby</copyright><lastBuildDate>Wed, 09 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cardinalby.github.io/blog/tags/firefox/index.xml" rel="self" type="application/rss+xml"/><item><title>Publish on Firefox Add-ons</title><link>https://cardinalby.github.io/blog/post/github-actions/webext/6-publish-on-firefox-addons/</link><pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/webext/6-publish-on-firefox-addons/</guid><description>In this part we are going to create the workflow that will be responsible for publishing the extension on Firefox Add-ons marketplace.
ðŸ§± Prepare First, you need to find out your extension UUID. You can find it on your extension&amp;rsquo;s page at Add-on Developer Hub in the &amp;ldquo;Technical Details&amp;rdquo; section.
Next, follow the official documentation and obtain jwtIssuer and jwtSecret values required for accessing the API.
ðŸ”’ Add these values to secrets: FF_EXTENSION_ID - UUID of your extension (e.</description></item><item><title>Build release assets</title><link>https://cardinalby.github.io/blog/post/github-actions/webext/4-build-release-assets/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/webext/4-build-release-assets/</guid><description>build-assets-on-release workflow Let&amp;rsquo;s create the first workflow that utilizes build-test-pack action and builds release assets for offline distribution once a release has been published.
.github/workflows/build-assets-on-release.yml:
name: Build release assets on: release: # Creating draft releases will not trigger it types: [published] jobs: # We will add 3 jobs here... The workflow will have 3 jobs:
ensure-zip: Ensuring we have zip release asset. build-signed-crx-asset: Building crx asset. build-signed-xpi-asset: Building xpi asset. ensure-zip job The first job will find zip asset in the release or build it if not found:</description></item></channel></rss>