<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chrome on Tech grumbling</title><link>https://cardinalby.github.io/blog/tags/chrome/</link><description>Recent content in Chrome on Tech grumbling</description><generator>Hugo</generator><language>en-us</language><copyright>cardinalby</copyright><lastBuildDate>Thu, 10 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cardinalby.github.io/blog/tags/chrome/index.xml" rel="self" type="application/rss+xml"/><item><title>Publish on Chrome Web Store</title><link>https://cardinalby.github.io/blog/post/github-actions/webext/7-publish-on-chrome-web-store/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/webext/7-publish-on-chrome-web-store/</guid><description>&lt;p>In this part we are going to create the workflow that will be responsible for publishing the extension
on Chrome Web Store. This part is going to be a bit tricky comparing to the others.&lt;/p>
&lt;h2 id="-prepare">🧱 Prepare&lt;/h2>
&lt;p>❶ To set up Google Publish API access you need to obtain &lt;code>clientId&lt;/code>, &lt;code>clientSecret&lt;/code> and &lt;code>refreshToken&lt;/code> from Google. These articles can help you to do that:
* &lt;a href="https://developer.chrome.com/webstore/using_webstore_api" target="_blank">Using the Chrome Web Store Publish API&lt;/a>
* &lt;a href="https://github.com/DrewML/chrome-webstore-upload/blob/master/How%20to%20generate%20Google%20API%20keys.md" target="_blank">How to generate Google API keys&lt;/a>&lt;/p></description></item><item><title>Build release assets</title><link>https://cardinalby.github.io/blog/post/github-actions/webext/4-build-release-assets/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/webext/4-build-release-assets/</guid><description>&lt;h1 id="build-assets-on-release-workflow">&lt;em>build-assets-on-release&lt;/em> workflow&lt;/h1>
&lt;p>Let&amp;rsquo;s create the first workflow that utilizes &lt;em>&lt;strong>build-test-pack&lt;/strong>&lt;/em> action and builds release assets for offline distribution once a release has been published.&lt;/p>
&lt;p>&lt;img src="images/posts/github-actions/webext/build-assets-on-release.png" alt="build-assets-on-release workflow" />&lt;/p>
&lt;p>&lt;em>.github/workflows/build-assets-on-release.yml:&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build release assets&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">release&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Creating draft releases will not trigger it&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">types&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">published]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># We will add 3 jobs here...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The workflow will have 3 jobs:&lt;/p>
&lt;ol>
&lt;li>&lt;em>ensure-zip&lt;/em>: Ensuring we have &lt;strong>zip&lt;/strong> release asset.&lt;/li>
&lt;li>&lt;em>build-signed-crx-asset&lt;/em>: Building &lt;strong>crx&lt;/strong> asset.&lt;/li>
&lt;li>&lt;em>build-signed-xpi-asset&lt;/em>: Building &lt;strong>xpi&lt;/strong> asset.&lt;/li>
&lt;/ol>
&lt;h2 id="ensure-zip-job">&lt;em>ensure-zip&lt;/em> job&lt;/h2>
&lt;p>The first job will find &lt;strong>zip&lt;/strong> asset in the release or build it if not found:&lt;/p></description></item></channel></rss>