<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Tech grumbling</title><link>https://cardinalby.github.io/blog/tags/docker/</link><description>Recent content in Docker on Tech grumbling</description><generator>Hugo</generator><language>en-us</language><copyright>cardinalby</copyright><lastBuildDate>Tue, 18 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cardinalby.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Actions integration testing lib</title><link>https://cardinalby.github.io/blog/project/github-actions-testing-lib/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/project/github-actions-testing-lib/</guid><description>&lt;h2 id="check-out">Check out&lt;/h2>
&lt;p>&lt;a href="https://github.com/cardinalby/github-action-ts-run-api" target="_blank">https://github.com/cardinalby/github-action-ts-run-api&lt;/a>&lt;/p>
&lt;h2 id="purpose">Purpose&lt;/h2>
&lt;p>ðŸ”¶ Executing your GitHub action &lt;strong>locally&lt;/strong> (or at any other environment).&lt;/p>
&lt;p>ðŸ”¶ Writing integration and functional tests, run them locally and at CI.&lt;/p>
&lt;p>ðŸ”¶ Having a short feedback loop without pushing and checking it behaviour at
real GitHub runners every time.&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;p>âœ… Supports executing JavaScript and Docker actions.&lt;/p>
&lt;p>âœ… Tested under Windows, Linux and macOS locally and on GitHub hosted runners.&lt;/p>
&lt;p>âœ… Works well with Docker Desktop under Windows and macOS (for Docker actions).&lt;/p></description></item><item><title>Testing of Docker Actions</title><link>https://cardinalby.github.io/blog/post/github-actions/testing/3-testing-of-docker-actions/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/testing/3-testing-of-docker-actions/</guid><description>&lt;p>In this part I&amp;rsquo;m going to tell about approaches that can be used to test a Docker container Action.&lt;/p>
&lt;h1 id="unit-tests">Unit tests&lt;/h1>
&lt;p>An approach here depends on what programming language you use inside a container. Each of them has own testing libraries that can be used to test an application in the container.&lt;/p>
&lt;p>If you use bare bash script, you can divide a single &lt;em>entrypoint.sh&lt;/em> file into the several small scripts considering them as units and testing separately.&lt;/p></description></item></channel></rss>