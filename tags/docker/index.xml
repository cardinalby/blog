<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Tech grumbling</title><link>https://cardinalby.github.io/blog/tags/docker/</link><description>Recent content in docker on Tech grumbling</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>cardinalby</copyright><lastBuildDate>Fri, 03 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://cardinalby.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing of Docker Actions</title><link>https://cardinalby.github.io/blog/post/github-actions/testing/3-testing-of-docker-actions/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://cardinalby.github.io/blog/post/github-actions/testing/3-testing-of-docker-actions/</guid><description>In this part I&amp;rsquo;m going to tell about approaches that can be used to test a Docker container Action.
Unit tests An approach here depends on what programming language you use inside a container. Each of them has own testing libraries that can be used to test an application in the container.
If you use bare bash script, you can divide a single entrypoint.sh file into the several small scripts considering them as units and testing separately.</description></item></channel></rss>